---
import { marked } from "marked";
import {
  ContentService,
  OpenAPI,
  type BlogsPageContentModel,
  type BlogPostContentModel,
} from "@/api";
import Layout from "@/layouts/Layout.astro";

OpenAPI.BASE = import.meta.env.PUBLIC_BASE_URL;
const nodes = await ContentService.getContent20({
  filter: ["contentType:blogsPage"],
});
const node: BlogsPageContentModel = nodes.items[0];

const { title, content } = node.properties;

const blogPosts = await ContentService.getContent20({
  filter: ["contentType:blogPost"],
  sort: ["publishedDate:desc"],
  take: 100,
});
---

<Layout name={title}>
  <article class="mb-12 max-w-[50rem] prose prose-white dark:prose-invert">
    <h1>{title}</h1>
    <div set:html={marked.parse(content)} />
  </article>

  <section class="c-posts max-w-[50rem]">
    {
      blogPosts.items.map((blogPost: BlogPostContentModel) => (
        <article
          class="prose dark:prose-invert max-w-none mb-12 bg-white dark:bg-imperial-primer-900 border border-imperial-primer-200 dark:border-imperial-primer-700 rounded-xl p-5 lg:-mr-32 xl:-mr-48 2xl:-mr-60 3xl:-mr-72"
          style={`view-transition-name: article-${blogPost.id}`}
        >
          <h2 class="mb-1">
            <a href={blogPost.route.path}>{blogPost.name}</a>
          </h2>
          <ul class="text-chalk-700 dark:text-chalk-200 not-prose">
            <li>
              <time
                datetime={new Date(
                  blogPost.properties.publishedDate
                ).toISOString()}
              >
                {new Date(blogPost.properties.publishedDate).toLocaleDateString(
                  "en-gb",
                  {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  }
                )}
              </time>
            </li>
          </ul>
          <p class="lead">{blogPost.properties.content}</p>
        </article>
      ))
    }
  </section>
</Layout>
