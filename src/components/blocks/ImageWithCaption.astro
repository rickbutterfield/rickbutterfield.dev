---
import { marked } from "marked";
import type { ImageWithCaptionElementModel } from "@/api";
import { Image } from "astro:assets";

const { data } = Astro.props;
const typedData = data as ImageWithCaptionElementModel;

const baseUrl = import.meta.env.PUBLIC_BASE_URL_HTTPS;

let src: string = `${baseUrl}${typedData?.properties?.image[0]?.url}?format=webp`;

if (typedData?.properties?.image[0].focalPoint !== null) {
  src += `&rxy=${typedData?.properties?.image[0].focalPoint.left},${typedData?.properties?.image[0].focalPoint.top}`;
}

const caption: string = typedData?.properties?.caption;
const alt: string = typedData?.properties?.image[0]?.properties?.altText ?? caption;

let width: number = typedData?.properties?.image[0]?.width;
let height: number = typedData?.properties?.image[0]?.height;

// Calculate scaled dimensions with max width of 2000
const maxWidth = 1000;
if (width > maxWidth) {
  const aspectRatio = height / width;
  width = maxWidth;
  height = Math.round(maxWidth * aspectRatio);
}

---

<figure>
  <Image
    src={src}
    alt={alt}
    width={width}
    height={height}
  />
  <figcaption set:html={marked.parse(caption)} />
</figure>
