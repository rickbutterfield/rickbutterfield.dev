// This file is auto-generated by @hey-api/openapi-ts

export type ApiBlockGridAreaModel = {
    alias: string;
    rowSpan: number;
    columnSpan: number;
    items: Array<ApiBlockGridItemModel>;
};

export type ApiBlockGridItemModel = ApiBlockItemModel & {
    rowSpan?: number;
    columnSpan?: number;
    areaGridColumns?: number;
    areas?: Array<ApiBlockGridAreaModel>;
};

export type ApiBlockGridModel = {
    gridColumns: number;
    items: Array<ApiBlockGridItemModel>;
};

export type ApiBlockItemModel = {
    content: IApiElementModel;
    settings?: IApiElementModel;
};

export type ApiBlockListModel = {
    items: Array<(ApiBlockItemModel | ApiBlockGridItemModel)>;
};

export type ApiContentRouteModel = {
    path: string;
    startItem: ApiContentStartItemModel;
};

export type ApiContentStartItemModel = {
    id: string;
    path: string;
};

export type BlogPostContentModel = IApiContentModelBase & {
    properties?: BlogPostPropertiesModel;
};

export type BlogPostContentResponseModel = IApiContentResponseModelBase & BlogPostContentModel;

export type BlogPostPropertiesModel = PageContentPropertiesModel & PageSettingsPropertiesModel & {
    publishedDate?: string | null;
};

export type BlogsPageContentModel = IApiContentModelBase & {
    properties?: BlogsPagePropertiesModel;
};

export type BlogsPageContentResponseModel = IApiContentResponseModelBase & BlogsPageContentModel;

export type BlogsPagePropertiesModel = PageContentPropertiesModel & PageSettingsPropertiesModel;

export type CVentryElementModel = IApiElementModelBase & {
    properties?: CVentryPropertiesModel;
};

export type CVentryPropertiesModel = {
    employerName?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    jobDescription?: string | null;
};

export type ContentPageContentModel = IApiContentModelBase & {
    properties?: ContentPagePropertiesModel;
};

export type ContentPageContentResponseModel = IApiContentResponseModelBase & ContentPageContentModel;

export type ContentPagePropertiesModel = PageSettingsPropertiesModel & PageContentPropertiesModel;

export type EmploymentHistoryElementModel = IApiElementModelBase & {
    properties?: EmploymentHistoryPropertiesModel;
};

export type EmploymentHistoryPropertiesModel = {
    history?: ApiBlockListModel;
};

export type EventInfoElementModel = IApiElementModelBase & {
    properties?: EventInfoPropertiesModel;
};

export type EventInfoPropertiesModel = {
    eventName?: string | null;
    eventDate?: string | null;
    eventUrl?: string | null;
};

export type HomePageContentModel = IApiContentModelBase & {
    properties?: HomePagePropertiesModel;
};

export type HomePageContentResponseModel = IApiContentResponseModelBase & HomePageContentModel;

export type HomePagePropertiesModel = PageContentPropertiesModel & PageSettingsPropertiesModel;

export type HttpValidationProblemDetails = ProblemDetails & {
    errors?: {
        [key: string]: Array<(string)>;
    };
    [key: string]: (unknown | string) | undefined;
};

export type IApiContentModel = ContentPageContentModel | HomePageContentModel | SpeakingPageContentModel | BlogPostContentModel | SpeakingPostContentModel | BlogsPageContentModel;

export type IApiContentModelBase = IApiElementModelBase & {
    readonly id: string;
    readonly contentType: string;
    readonly name?: string | null;
    readonly createDate: string;
    readonly updateDate: string;
    readonly route: ApiContentRouteModel;
};

export type IApiContentResponseModel = ContentPageContentResponseModel | HomePageContentResponseModel | SpeakingPageContentResponseModel | BlogPostContentResponseModel | SpeakingPostContentResponseModel | BlogsPageContentResponseModel;

export type IApiContentResponseModelBase = IApiContentModelBase & {
    properties: {
        readonly id: string;
        readonly contentType: string;
        readonly name?: string | null;
        readonly createDate: string;
        readonly updateDate: string;
        readonly route: ApiContentRouteModel;
    };
    readonly id: string;
    readonly contentType: string;
    readonly name?: string | null;
    readonly createDate: string;
    readonly updateDate: string;
    readonly route: ApiContentRouteModel;
    readonly cultures: {
        [key: string]: (ApiContentRouteModel);
    };
};

export type IApiElementModel = PageSettingsElementModel | PageContentElementModel | UpdateAlertElementModel | CVentryElementModel | YouTubeVideoElementModel | EventInfoElementModel | ImageWithCaptionElementModel | RichTextElementModel | EmploymentHistoryElementModel;

export type IApiElementModelBase = {
    readonly id: string;
    readonly contentType: string;
};

export type IApiMediaWithCropsModel = {
    readonly id: string;
    readonly name: string;
    readonly mediaType: string;
    readonly url: string;
    readonly extension?: string | null;
    readonly width?: number | null;
    readonly height?: number | null;
    readonly bytes?: number | null;
    readonly properties: {
        [key: string]: unknown;
    };
    focalPoint?: ImageFocalPointModel;
    readonly crops?: Array<ImageCropModel> | null;
};

export type IApiMediaWithCropsResponseModel = {
    readonly id: string;
    readonly name: string;
    readonly mediaType: string;
    readonly url: string;
    readonly extension?: string | null;
    readonly width?: number | null;
    readonly height?: number | null;
    readonly bytes?: number | null;
    readonly properties: {
        [key: string]: unknown;
    };
    focalPoint: ImageFocalPointModel;
    readonly crops?: Array<ImageCropModel> | null;
    readonly path: string;
    readonly createDate: string;
    readonly updateDate: string;
};

export type ImageCropCoordinatesModel = {
    x1: number;
    y1: number;
    x2: number;
    y2: number;
};

export type ImageCropModel = {
    alias?: string | null;
    width: number;
    height: number;
    coordinates?: ImageCropCoordinatesModel;
};

export type ImageFocalPointModel = {
    left: number;
    top: number;
};

export type ImageWithCaptionElementModel = IApiElementModelBase & {
    properties?: ImageWithCaptionPropertiesModel;
};

export type ImageWithCaptionPropertiesModel = {
    image?: Array<IApiMediaWithCropsModel> | null;
    caption?: string | null;
};

export type PageContentElementModel = IApiElementModelBase & {
    properties?: PageContentPropertiesModel;
};

export type PageContentPropertiesModel = {
    featuredImage?: Array<IApiMediaWithCropsModel> | null;
    title?: string | null;
    content?: string | null;
    grid?: ApiBlockGridModel;
};

export type PageSettingsElementModel = IApiElementModelBase & {
    properties?: PageSettingsPropertiesModel;
};

export type PageSettingsPropertiesModel = {
    umbracoUrlName?: string | null;
    umbracoUrlAlias?: string | null;
};

export type PagedIApiContentResponseModel = {
    total: number;
    items: Array<IApiContentResponseModel>;
};

export type PagedIApiMediaWithCropsResponseModel = {
    total: number;
    items: Array<IApiMediaWithCropsResponseModel>;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    [key: string]: (unknown | string | number) | undefined;
};

export type RichTextElementModel = IApiElementModelBase & {
    properties?: RichTextPropertiesModel;
};

export type RichTextPropertiesModel = {
    content?: string | null;
};

export type SpeakingPageContentModel = IApiContentModelBase & {
    properties?: SpeakingPagePropertiesModel;
};

export type SpeakingPageContentResponseModel = IApiContentResponseModelBase & SpeakingPageContentModel;

export type SpeakingPagePropertiesModel = PageSettingsPropertiesModel & PageContentPropertiesModel;

export type SpeakingPostContentModel = IApiContentModelBase & {
    properties?: SpeakingPostPropertiesModel;
};

export type SpeakingPostContentResponseModel = IApiContentResponseModelBase & SpeakingPostContentModel;

export type SpeakingPostPropertiesModel = PageSettingsPropertiesModel & PageContentPropertiesModel & EventInfoPropertiesModel & {
    additionalEvents?: ApiBlockListModel;
};

export type UpdateAlertElementModel = IApiElementModelBase & {
    properties?: UpdateAlertPropertiesModel;
};

export type UpdateAlertPropertiesModel = {
    date?: string | null;
    content?: string | null;
};

export type YouTubeVideoElementModel = IApiElementModelBase & {
    properties?: YouTubeVideoPropertiesModel;
};

export type YouTubeVideoPropertiesModel = {
    videoID?: string | null;
};

export type GetContentData = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    fetch?: string;
    /**
     * Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    filter?: Array<(string)>;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * Specifies the number of found content items to skip. Use this to control pagination of the response.
     */
    skip?: number;
    /**
     * Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    sort?: Array<(string)>;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
    /**
     * Specifies the number of found content items to take. Use this to control pagination of the response.
     */
    take?: number;
};

export type GetContentResponse = PagedIApiContentResponseModel;

export type GetContent20Data = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    fetch?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    /**
     * Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    filter?: Array<(string)>;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * Specifies the number of found content items to skip. Use this to control pagination of the response.
     */
    skip?: number;
    /**
     * Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    sort?: Array<(string)>;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
    /**
     * Specifies the number of found content items to take. Use this to control pagination of the response.
     */
    take?: number;
};

export type GetContent20Response = PagedIApiContentResponseModel;

export type GetContentItemData = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    id?: Array<(string)>;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
};

export type GetContentItemResponse = Array<IApiContentResponseModel>;

export type GetContentItemByPathData = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    path: string;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
};

export type GetContentItemByPathResponse = IApiContentResponseModel;

export type GetContentItemByPath20Data = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    path: string;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
};

export type GetContentItemByPath20Response = IApiContentResponseModel;

export type GetContentItemByIdData = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    id: string;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
};

export type GetContentItemByIdResponse = IApiContentResponseModel;

export type GetContentItemById20Data = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    id: string;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
};

export type GetContentItemById20Response = IApiContentResponseModel;

export type GetContentItems20Data = {
    /**
     * Defines the language to return. Use this when querying language variant content items.
     */
    acceptLanguage?: string;
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    id?: Array<(string)>;
    /**
     * Whether to request draft content.
     */
    preview?: boolean;
    /**
     * URL segment or GUID of a root content item.
     */
    startItem?: string;
};

export type GetContentItems20Response = Array<IApiContentResponseModel>;

export type GetMediaData = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    fetch?: string;
    /**
     * Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    filter?: Array<(string)>;
    /**
     * Specifies the number of found media items to skip. Use this to control pagination of the response.
     */
    skip?: number;
    /**
     * Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    sort?: Array<(string)>;
    /**
     * Specifies the number of found media items to take. Use this to control pagination of the response.
     */
    take?: number;
};

export type GetMediaResponse = PagedIApiMediaWithCropsResponseModel;

export type GetMedia20Data = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    fetch?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    /**
     * Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    filter?: Array<(string)>;
    /**
     * Specifies the number of found media items to skip. Use this to control pagination of the response.
     */
    skip?: number;
    /**
     * Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    sort?: Array<(string)>;
    /**
     * Specifies the number of found media items to take. Use this to control pagination of the response.
     */
    take?: number;
};

export type GetMedia20Response = PagedIApiMediaWithCropsResponseModel;

export type GetMediaItemData = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    id?: Array<(string)>;
};

export type GetMediaItemResponse = Array<IApiMediaWithCropsResponseModel>;

export type GetMediaItemByPathData = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    path: string;
};

export type GetMediaItemByPathResponse = IApiMediaWithCropsResponseModel;

export type GetMediaItemByPath20Data = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    path: string;
};

export type GetMediaItemByPath20Response = IApiMediaWithCropsResponseModel;

export type GetMediaItemByIdData = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    id: string;
};

export type GetMediaItemByIdResponse = IApiMediaWithCropsResponseModel;

export type GetMediaItemById20Data = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    id: string;
};

export type GetMediaItemById20Response = IApiMediaWithCropsResponseModel;

export type GetMediaItems20Data = {
    /**
     * API key specified through configuration to authorize access to the API.
     */
    apiKey?: string;
    /**
     * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    expand?: string;
    /**
     * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     */
    fields?: string;
    id?: Array<(string)>;
};

export type GetMediaItems20Response = Array<IApiMediaWithCropsResponseModel>;

export type $OpenApiTs = {
    '/umbraco/delivery/api/v1/content': {
        get: {
            req: GetContentData;
            res: {
                /**
                 * OK
                 */
                200: PagedIApiContentResponseModel;
                /**
                 * Bad Request
                 */
                400: ProblemDetails | HttpValidationProblemDetails;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v2/content': {
        get: {
            req: GetContent20Data;
            res: {
                /**
                 * OK
                 */
                200: PagedIApiContentResponseModel;
                /**
                 * Bad Request
                 */
                400: ProblemDetails | HttpValidationProblemDetails;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v1/content/item': {
        get: {
            req: GetContentItemData;
            res: {
                /**
                 * OK
                 */
                200: Array<IApiContentResponseModel>;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Forbidden
                 */
                403: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v1/content/item/{path}': {
        get: {
            req: GetContentItemByPathData;
            res: {
                /**
                 * OK
                 */
                200: IApiContentResponseModel;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Forbidden
                 */
                403: unknown;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v2/content/item/{path}': {
        get: {
            req: GetContentItemByPath20Data;
            res: {
                /**
                 * OK
                 */
                200: IApiContentResponseModel;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Forbidden
                 */
                403: unknown;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v1/content/item/{id}': {
        get: {
            req: GetContentItemByIdData;
            res: {
                /**
                 * OK
                 */
                200: IApiContentResponseModel;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Forbidden
                 */
                403: unknown;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v2/content/item/{id}': {
        get: {
            req: GetContentItemById20Data;
            res: {
                /**
                 * OK
                 */
                200: IApiContentResponseModel;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Forbidden
                 */
                403: unknown;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v2/content/items': {
        get: {
            req: GetContentItems20Data;
            res: {
                /**
                 * OK
                 */
                200: Array<IApiContentResponseModel>;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Forbidden
                 */
                403: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v1/media': {
        get: {
            req: GetMediaData;
            res: {
                /**
                 * OK
                 */
                200: PagedIApiMediaWithCropsResponseModel;
                /**
                 * Bad Request
                 */
                400: ProblemDetails | HttpValidationProblemDetails;
            };
        };
    };
    '/umbraco/delivery/api/v2/media': {
        get: {
            req: GetMedia20Data;
            res: {
                /**
                 * OK
                 */
                200: PagedIApiMediaWithCropsResponseModel;
                /**
                 * Bad Request
                 */
                400: ProblemDetails | HttpValidationProblemDetails;
            };
        };
    };
    '/umbraco/delivery/api/v1/media/item': {
        get: {
            req: GetMediaItemData;
            res: {
                /**
                 * OK
                 */
                200: Array<IApiMediaWithCropsResponseModel>;
            };
        };
    };
    '/umbraco/delivery/api/v1/media/item/{path}': {
        get: {
            req: GetMediaItemByPathData;
            res: {
                /**
                 * OK
                 */
                200: IApiMediaWithCropsResponseModel;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v2/media/item/{path}': {
        get: {
            req: GetMediaItemByPath20Data;
            res: {
                /**
                 * OK
                 */
                200: IApiMediaWithCropsResponseModel;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v1/media/item/{id}': {
        get: {
            req: GetMediaItemByIdData;
            res: {
                /**
                 * OK
                 */
                200: IApiMediaWithCropsResponseModel;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v2/media/item/{id}': {
        get: {
            req: GetMediaItemById20Data;
            res: {
                /**
                 * OK
                 */
                200: IApiMediaWithCropsResponseModel;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/umbraco/delivery/api/v2/media/items': {
        get: {
            req: GetMediaItems20Data;
            res: {
                /**
                 * OK
                 */
                200: Array<IApiMediaWithCropsResponseModel>;
            };
        };
    };
};