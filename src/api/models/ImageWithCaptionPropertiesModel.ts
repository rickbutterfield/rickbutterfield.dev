/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Delivery API
 * You can find out more about the Umbraco Delivery API in [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api).
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IApiMediaWithCropsModel } from './IApiMediaWithCropsModel';
import {
    IApiMediaWithCropsModelFromJSON,
    IApiMediaWithCropsModelFromJSONTyped,
    IApiMediaWithCropsModelToJSON,
} from './IApiMediaWithCropsModel';

/**
 * 
 * @export
 * @interface ImageWithCaptionPropertiesModel
 */
export interface ImageWithCaptionPropertiesModel {
    /**
     * 
     * @type {Array<IApiMediaWithCropsModel>}
     * @memberof ImageWithCaptionPropertiesModel
     */
    image?: Array<IApiMediaWithCropsModel> | null;
    /**
     * 
     * @type {string}
     * @memberof ImageWithCaptionPropertiesModel
     */
    caption?: string | null;
}

/**
 * Check if a given object implements the ImageWithCaptionPropertiesModel interface.
 */
export function instanceOfImageWithCaptionPropertiesModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ImageWithCaptionPropertiesModelFromJSON(json: any): ImageWithCaptionPropertiesModel {
    return ImageWithCaptionPropertiesModelFromJSONTyped(json, false);
}

export function ImageWithCaptionPropertiesModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageWithCaptionPropertiesModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'image': !exists(json, 'image') ? undefined : (json['image'] === null ? null : (json['image'] as Array<any>).map(IApiMediaWithCropsModelFromJSON)),
        'caption': !exists(json, 'caption') ? undefined : json['caption'],
    };
}

export function ImageWithCaptionPropertiesModelToJSON(value?: ImageWithCaptionPropertiesModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'image': value.image === undefined ? undefined : (value.image === null ? null : (value.image as Array<any>).map(IApiMediaWithCropsModelToJSON)),
        'caption': value.caption,
    };
}

