/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Delivery API
 * You can find out more about the Umbraco Delivery API in [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api).
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IApiContentRouteModel } from './IApiContentRouteModel';
import {
    IApiContentRouteModelFromJSON,
    IApiContentRouteModelFromJSONTyped,
    IApiContentRouteModelToJSON,
} from './IApiContentRouteModel';
import type { IApiElementModelBase } from './IApiElementModelBase';
import {
    IApiElementModelBaseFromJSON,
    IApiElementModelBaseFromJSONTyped,
    IApiElementModelBaseToJSON,
} from './IApiElementModelBase';

import {
     BlogPostContentModelFromJSONTyped,
     BlogsPageContentModelFromJSONTyped,
     ContentPageContentModelFromJSONTyped,
     HomePageContentModelFromJSONTyped
} from './index';

/**
 * 
 * @export
 * @interface IApiContentModelBase
 */
export interface IApiContentModelBase extends IApiElementModelBase {
    /**
     * 
     * @type {string}
     * @memberof IApiContentModelBase
     */
    readonly name?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof IApiContentModelBase
     */
    readonly createDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof IApiContentModelBase
     */
    readonly updateDate?: Date;
    /**
     * 
     * @type {IApiContentRouteModel}
     * @memberof IApiContentModelBase
     */
    route?: IApiContentRouteModel;
    /**
     * 
     * @type {string}
     * @memberof IApiContentModelBase
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof IApiContentModelBase
     */
    readonly contentType?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof IApiContentModelBase
     */
    readonly properties?: { [key: string]: any; };
}

/**
 * Check if a given object implements the IApiContentModelBase interface.
 */
export function instanceOfIApiContentModelBase(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IApiContentModelBaseFromJSON(json: any): IApiContentModelBase {
    return IApiContentModelBaseFromJSONTyped(json, false);
}

export function IApiContentModelBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IApiContentModelBase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['contentType'] === 'blogPost') {
            return BlogPostContentModelFromJSONTyped(json, true);
        }
        if (json['contentType'] === 'blogsPage') {
            return BlogsPageContentModelFromJSONTyped(json, true);
        }
        if (json['contentType'] === 'contentPage') {
            return ContentPageContentModelFromJSONTyped(json, true);
        }
        if (json['contentType'] === 'homePage') {
            return HomePageContentModelFromJSONTyped(json, true);
        }
    }
    return {
        ...IApiElementModelBaseFromJSONTyped(json, ignoreDiscriminator),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'createDate': !exists(json, 'createDate') ? undefined : (new Date(json['createDate'])),
        'updateDate': !exists(json, 'updateDate') ? undefined : (new Date(json['updateDate'])),
        'route': !exists(json, 'route') ? undefined : IApiContentRouteModelFromJSON(json['route']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'contentType': !exists(json, 'contentType') ? undefined : json['contentType'],
        'properties': !exists(json, 'properties') ? undefined : json['properties'],
    };
}

export function IApiContentModelBaseToJSON(value?: IApiContentModelBase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...IApiElementModelBaseToJSON(value),
        'route': IApiContentRouteModelToJSON(value.route),
    };
}

