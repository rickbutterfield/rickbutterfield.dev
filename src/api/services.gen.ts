// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetContentData, GetContentResponse, GetContent20Data, GetContent20Response, GetContentItemData, GetContentItemResponse, GetContentItemByPathData, GetContentItemByPathResponse, GetContentItemByPath20Data, GetContentItemByPath20Response, GetContentItemByIdData, GetContentItemByIdResponse, GetContentItemById20Data, GetContentItemById20Response, GetContentItems20Data, GetContentItems20Response, GetMediaData, GetMediaResponse, GetMedia20Data, GetMedia20Response, GetMediaItemData, GetMediaItemResponse, GetMediaItemByPathData, GetMediaItemByPathResponse, GetMediaItemByPath20Data, GetMediaItemByPath20Response, GetMediaItemByIdData, GetMediaItemByIdResponse, GetMediaItemById20Data, GetMediaItemById20Response, GetMediaItems20Data, GetMediaItems20Response } from './types.gen';

export class ContentService {
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.fetch Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found content items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found content items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns PagedIApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContent(data: GetContentData = {}): CancelablePromise<GetContentResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand
            },
            errors: {
                400: 'Bad Request',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.fetch Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found content items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found content items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns PagedIApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContent20(data: GetContent20Data = {}): CancelablePromise<GetContent20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                400: 'Bad Request',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContentItem(data: GetContentItemData = {}): CancelablePromise<GetContentItemResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content/item',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                id: data.id,
                expand: data.expand
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContentItemByPath(data: GetContentItemByPathData): CancelablePromise<GetContentItemByPathResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContentItemByPath20(data: GetContentItemByPath20Data): CancelablePromise<GetContentItemByPath20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContentItemById(data: GetContentItemByIdData): CancelablePromise<GetContentItemByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContentItemById20(data: GetContentItemById20Data): CancelablePromise<GetContentItemById20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel OK
     * @throws ApiError
     */
    public static getContentItems20(data: GetContentItems20Data = {}): CancelablePromise<GetContentItems20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/items',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                id: data.id,
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden'
            }
        });
    }
    
}

export class MediaService {
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.fetch Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found media items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found media items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns PagedIApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMedia(data: GetMediaData = {}): CancelablePromise<GetMediaResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.fetch Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found media items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found media items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns PagedIApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMedia20(data: GetMedia20Data = {}): CancelablePromise<GetMedia20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMediaItem(data: GetMediaItemData = {}): CancelablePromise<GetMediaItemResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media/item',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                id: data.id,
                expand: data.expand
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMediaItemByPath(data: GetMediaItemByPathData): CancelablePromise<GetMediaItemByPathResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand
            },
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMediaItemByPath20(data: GetMediaItemByPath20Data): CancelablePromise<GetMediaItemByPath20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMediaItemById(data: GetMediaItemByIdData): CancelablePromise<GetMediaItemByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand
            },
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMediaItemById20(data: GetMediaItemById20Data): CancelablePromise<GetMediaItemById20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel OK
     * @throws ApiError
     */
    public static getMediaItems20(data: GetMediaItems20Data = {}): CancelablePromise<GetMediaItems20Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media/items',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                id: data.id,
                expand: data.expand,
                fields: data.fields
            }
        });
    }
    
}